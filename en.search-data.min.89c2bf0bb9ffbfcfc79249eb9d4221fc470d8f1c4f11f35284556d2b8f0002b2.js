'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/study-k8s/docs/basic/component/api-server/','title':"api-server",'content':"api-server 基础 "});index.add({'id':1,'href':'/study-k8s/docs/basic/resource/pod/','title':"Pod",'content':"Pod "});index.add({'id':2,'href':'/study-k8s/docs/basic/quick-start/','title':"快速上手",'content':"Kubernetes 快速上手 架构 概念 "});index.add({'id':3,'href':'/study-k8s/docs/basic/','title':"第一部分 基础",'content':""});index.add({'id':4,'href':'/study-k8s/docs/basic/practice/spec/','title':"编程规范",'content':"Kubernetes 编程规范 "});index.add({'id':5,'href':'/study-k8s/docs/basic/resource/configmap/','title':"ConfigMap",'content':"ConfigMap 基础 ConfigMap 在运行时会将配置文件、命令行参数、环境变量、端口号以及其他配置工件绑定到 Pod 的容器和系统组件。借助 ConfigMap，您可以将配置与 Pod 和组件分开，这有助于保持工作负载的可移植性，使其配置更易于更改和管理，并防止将配置数据硬编码到 Pod 规范。\nConfigMap 可用于存储和共享非敏感、未加密的配置信息。要在集群中使用敏感信息，您必须使用 Secret。\n创建 ConfigMap 使用以下命令创建 ConfigMap：\nkubectl create configmap [NAME] [DATA]\n[DATA] 可以是： 包含一个或多个配置文件的目录的路径，使用 \u0026ndash;from-file 标志指示 键值对，每个键值对都使用 \u0026ndash;from-literal 标志指定 如需详细了解 kubectl create，请参阅参考文档。\n您还可以通过在 YAML 清单文件中定义 ConfigMap 对象并使用 kubectl create -f [FILE] 部署对象来创建 ConfigMap。\n使用 ConfigMap apiVersion: v1 kind: Pod metadata: name: dapi-test-pod spec: containers: - name: test-container image: k8s.gcr.io/busybox command: [ \u0026#34;/bin/sh\u0026#34;, \u0026#34;-c\u0026#34;, \u0026#34;echo $(SPECIAL_LEVEL_KEY) $(SPECIAL_TYPE_KEY)\u0026#34; ] env: - name: SPECIAL_LEVEL_KEY valueFrom: configMapKeyRef: name: special-config key: SPECIAL_LEVEL - name: SPECIAL_TYPE_KEY valueFrom: configMapKeyRef: name: special-config key: SPECIAL_TYPE restartPolicy: Never "});index.add({'id':6,'href':'/study-k8s/docs/basic/resource/deployment/','title':"Deployment",'content':"Deployment "});index.add({'id':7,'href':'/study-k8s/docs/basic/kubectl/','title':"Kubectl",'content':"Kubectl 常用命令 kubectl get  获取 service ip, port  kubectl get service/servicename -o jsonpath='{.spec.clusterIP}:{.spec.ports[*].port}' "});index.add({'id':8,'href':'/study-k8s/docs/basic/component/schedule/','title':"Schedule",'content':"Schedule 基础 "});index.add({'id':9,'href':'/study-k8s/docs/advanced/','title':"第二部分 进阶",'content':""});index.add({'id':10,'href':'/study-k8s/docs/basic/component/controller-manager/','title':"Controller Manager",'content':"Controller Manager 基础 "});index.add({'id':11,'href':'/study-k8s/docs/basic/resource/crd/','title':"CRD",'content':"CRD "});index.add({'id':12,'href':'/study-k8s/docs/source/','title':"第三部分 设计与实现",'content':""});index.add({'id':13,'href':'/study-k8s/docs/basic/component/','title':"组件",'content':"https://github.com/istio/istio\n"});index.add({'id':14,'href':'/study-k8s/docs/basic/resource/','title':"API 资源",'content':""});index.add({'id':15,'href':'/study-k8s/docs/basic/component/kube-proxy/','title':"Kube-proxy",'content':"Kube-proxy 基础 "});index.add({'id':16,'href':'/study-k8s/docs/basic/component/kubelet/','title':"Kubelet",'content':"Kubelet 基础 "});index.add({'id':17,'href':'/study-k8s/docs/basic/version/','title':"版本",'content':"Kubernetes 版本 "});index.add({'id':18,'href':'/study-k8s/docs/basic/practice/','title':"最佳实践",'content':"Kubernetes 最佳实践 "});index.add({'id':19,'href':'/study-k8s/categories/','title':"Categories",'content':""});index.add({'id':20,'href':'/study-k8s/docs/','title':"Docs",'content':""});index.add({'id':21,'href':'/study-k8s/tags/','title':"Tags",'content':""});index.add({'id':22,'href':'/study-k8s/','title':"首页",'content':""});})();