<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>API 对象 on Kubernetes 学习笔记</title>
    <link>https://ikingye.github.io/study-k8s/docs/basic/resource/</link>
    <description>Recent content in API 对象 on Kubernetes 学习笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://ikingye.github.io/study-k8s/docs/basic/resource/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Pod</title>
      <link>https://ikingye.github.io/study-k8s/docs/basic/resource/pod/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-k8s/docs/basic/resource/pod/</guid>
      <description>Pod Infra 容器 使用镜像：k8s.gcr.io/pause
这个镜像是一个用汇编语言编写的、永远处于 “暂停” 状态的容器，解压后的大小也只有 100~200 KB 左右。
Init 容器 以 Init: 开始的 Pod 状态概括表示 Init 容器的执行状态。
下表展示了在调试 Init 容器时可能见到的状态值。
   状态 含义     Init:N/M Pod 中有 M 个 Init 容器，其中 M 已经完成   Init:Error Init 容器执行错误   Init:CrashLoopBackOff Init 容器已经失败多次   Pending Pod 还没有开始执行 Init 容器   PodInitializing or Running Pod 已经完成执行 Init 容器    Pod phase（运行阶段） Pod 的 status 定义在 PodStatus 对象中，其中有一个 Phase（运行阶段） 字段。</description>
    </item>
    
    <item>
      <title>ConfigMap</title>
      <link>https://ikingye.github.io/study-k8s/docs/basic/resource/configmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-k8s/docs/basic/resource/configmap/</guid>
      <description>ConfigMap 基础 ConfigMap 在运行时会将配置文件、命令行参数、环境变量、端口号以及其他配置工件绑定到 Pod 的容器和系统组件。借助 ConfigMap，您可以将配置与 Pod 和组件分开，这有助于保持工作负载的可移植性，使其配置更易于更改和管理，并防止将配置数据硬编码到 Pod 规范。
ConfigMap 可用于存储和共享非敏感、未加密的配置信息。要在集群中使用敏感信息，您必须使用 Secret。
创建 ConfigMap 使用以下命令创建 ConfigMap：
kubectl create configmap [NAME] [DATA]
[DATA] 可以是： 包含一个或多个配置文件的目录的路径，使用 &amp;ndash;from-file 标志指示 键值对，每个键值对都使用 &amp;ndash;from-literal 标志指定 如需详细了解 kubectl create，请参阅参考文档。
您还可以通过在 YAML 清单文件中定义 ConfigMap 对象并使用 kubectl create -f [FILE] 部署对象来创建 ConfigMap。
使用 ConfigMap apiVersion: v1 kind: Pod metadata: name: dapi-test-pod spec: containers: - name: test-container image: k8s.gcr.io/busybox command: [ &amp;#34;/bin/sh&amp;#34;, &amp;#34;-c&amp;#34;, &amp;#34;echo $(SPECIAL_LEVEL_KEY) $(SPECIAL_TYPE_KEY)&amp;#34; ] env: - name: SPECIAL_LEVEL_KEY valueFrom: configMapKeyRef: name: special-config key: SPECIAL_LEVEL - name: SPECIAL_TYPE_KEY valueFrom: configMapKeyRef: name: special-config key: SPECIAL_TYPE restartPolicy: Never </description>
    </item>
    
    <item>
      <title>Deployment</title>
      <link>https://ikingye.github.io/study-k8s/docs/basic/resource/deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-k8s/docs/basic/resource/deployment/</guid>
      <description>Deployment </description>
    </item>
    
    <item>
      <title>CRD</title>
      <link>https://ikingye.github.io/study-k8s/docs/basic/resource/crd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/study-k8s/docs/basic/resource/crd/</guid>
      <description>CRD </description>
    </item>
    
  </channel>
</rss>